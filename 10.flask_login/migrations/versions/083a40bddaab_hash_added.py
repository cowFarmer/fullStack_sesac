"""hash_added

Revision ID: 083a40bddaab
Revises: 6a204824c39a
Create Date: 2023-08-01 10:56:07.359739

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session
from app import User
from werkzeug.security import generate_password_hash


# revision identifiers, used by Alembic.
revision = '083a40bddaab'
down_revision = '6a204824c39a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # 0. null이 가능하게 생성
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('password_hash', sa.String(length=120), nullable=True))

    # ### end Alembic commands ###
    # 데이터 마이그레이션 수행
    # DB 접근
    # 올드 컬럼(password) 데이터 가져오기
    # 읽은 데이터를 내가 원하는 hash 형태로 변환한다
    
    # 1. DB 접근
    bind = op.get_bind()
    session = Session(bind=bind)
    
    # 2. 데이터 가져오기
    users = session.query(User).all()
    
    # 3. 데이터 변환 과정
    for user in users:
        # password hash처리 필요
        user.password_hash = generate_password_hash(user.password)
        
    session.commit()
    session.close()
    
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('password_hash', nullable=False)
    
def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('password_hash')

    # ### end Alembic commands ###
